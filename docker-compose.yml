version: '3.8'

services:
  # Aplicación Caribe Vibes
  caribe-dreams-app:
    build: .
    container_name: caribe-dreams-api
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DATABASE_URL: jdbc:mysql://caribe-dreams-db:3306/caribe_dreams?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      DATABASE_USERNAME: caribe_user
      DATABASE_PASSWORD: caribe_password_2024
      JWT_SECRET: super-secure-jwt-secret-for-caribe-dreams-docker-compose-environment-2024
      REDIS_HOST: caribe-dreams-redis
      REDIS_PORT: 6379
    depends_on:
      caribe-dreams-db:
        condition: service_healthy
      caribe-dreams-redis:
        condition: service_started
    volumes:
      - caribe-uploads:/var/caribe-dreams/uploads
      - caribe-logs:/var/log/caribe-dreams
    restart: unless-stopped
    networks:
      - caribe-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Base de datos MySQL
  caribe-dreams-db:
    image: mysql:8.0
    container_name: caribe-dreams-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password_2024
      MYSQL_DATABASE: caribe_dreams
      MYSQL_USER: caribe_user
      MYSQL_PASSWORD: caribe_password_2024
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - caribe-mysql-data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - caribe-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "caribe_user", "-pcaribe_password_2024"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis para cache
  caribe-dreams-redis:
    image: redis:7-alpine
    container_name: caribe-dreams-redis
    ports:
      - "6379:6379"
    volumes:
      - caribe-redis-data:/data
    restart: unless-stopped
    networks:
      - caribe-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  caribe-dreams-nginx:
    image: nginx:alpine
    container_name: caribe-dreams-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - caribe-uploads:/var/www/uploads:ro
    depends_on:
      - caribe-dreams-app
    restart: unless-stopped
    networks:
      - caribe-network

  # Prometheus para métricas
  caribe-dreams-prometheus:
    image: prom/prometheus:latest
    container_name: caribe-dreams-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - caribe-prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - caribe-network

  # Grafana para visualización
  caribe-dreams-grafana:
    image: grafana/grafana:latest
    container_name: caribe-dreams-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: caribe_admin_2024
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    volumes:
      - caribe-grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - caribe-dreams-prometheus
    restart: unless-stopped
    networks:
      - caribe-network

# Volúmenes persistentes
volumes:
  caribe-mysql-data:
    driver: local
  caribe-redis-data:
    driver: local
  caribe-uploads:
    driver: local
  caribe-logs:
    driver: local
  caribe-prometheus-data:
    driver: local
  caribe-grafana-data:
    driver: local

# Red personalizada
networks:
  caribe-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
